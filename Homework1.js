'use strict';

// // Task 1
let Tc = prompt('Type a celsius temperature');
alert(`Fahrenheit temperature is ${(9 / 5) * Tc + 32}`);

// // Task 2
let admin;
let name = 'Василий';
admin = name;
console.log(admin);

// Task 3
let res1 = 10 + 10 + "10";
console.log(res1);
/* 1. сначала было сложено два числа (они шли первыми, код читается слева-направо),
2. JS произвел конкатенацию со строкой
3. получен результат 2010*/

let res2 = 10 + "10" + 10;
console.log(res2);
/* 1. JS распознал это все как строки 
2. произвел конкатенацию
3. получен результат 101010*/

let res3 = 10 + 10 + +"10";
console.log(res3);
/* 
1. была произведена конкатенация первого и второго числа
2. так как был выставлен унарный плюс, указывающий JS, что это должно
быть числом, а не строкой, то последнее слагаемое было также распознано как число и 
сконкатенировано
3. получен результат 30 */

let res4 = 10 / -"";
console.log(res4);
/* Проверка: -"", используя typeof, выдало number, могу предположить:
 1. JS начал деление, ввиду того, что JS является языком с неявным типом данных, он привел -"" распознав как -0
 2. Деление на -0 дало результат -Infinity*/

let res5 = 10 / +"2,5";
console.log(res5);
/* Проверка: +"2,5" через typeof проходит как number.
Получен результат NaN. Могу предположить, что из-за запятой
вместо точки, так как если заменить на точку то деление работает*/



